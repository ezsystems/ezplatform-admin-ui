{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ezPluginMoveElement.js","webpack:///webpack/bootstrap 0d5736e542ecb6a9a644","webpack:///./src/bundle/Resources/public/js/alloyeditor/src/plugins/ez-move-element.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","55","global","CKEDITOR","plugins","fireEditorInteraction","editor","evt","target","event","$","fire","nativeEvent","selectionData","getSelectionData","moveUpCommand","exec","data","focused","elementPath","block","widget","widgets","wrapper","previous","getPrevious","moveBefore","insertBefore","eZ","moveCaretToElement","findCaretElement","moveDownCommand","next","getNext","moveAfter","insertAfter","add","requires","init","addCommand","window"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,oBAAAD,KAEAD,EAAA,GAAAA,EAAA,OAA+BA,EAAA,iBAAAA,EAAA,qBAAiEA,EAAA,qCAAAC,MAC/F,mBAAAK,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,MDgBMC,GACA,SAAU/B,EAAQD,EAASO,GAEjC,cEhFA,SAAW0B,GACP,IAAIC,SAASC,QAAQZ,IAAI,iBAAzB,CAYA,GAAMa,GAAwB,SAACC,EAAQC,EAAKC,GACxC,GAAMC,IACFH,OAAQA,EACRE,OAAQA,EAAOE,EACfzB,KAAMsB,EAGVD,GAAOK,KAAK,qBACRC,YAAaH,EACbI,cAAeP,EAAOQ,sBAIxBC,GACFC,KAAM,SAAUV,EAAQW,GACpB,GAAIC,GAAUZ,EAAOa,cAAcC,MAC/BC,QAECH,KACDG,EAASf,EAAOgB,QAAQJ,QACxBA,EAAUG,EAAOE,QAGrB,IAAMC,GAAWN,EAAQO,aAErBD,KACIH,EACAA,EAAOK,WAAWF,IAElBN,EAAQS,aAAaH,GACrBlB,EAAOsB,GAAGC,mBAAmBvB,EAAQA,EAAOsB,GAAGE,iBAAiBZ,IAChEb,EAAsBC,EAAQ,eAAgBY,OAMxDa,GACFf,KAAM,SAAUV,EAAQW,GACpB,GAAIC,GAAUZ,EAAOa,cAAcC,MAC/BC,QAECH,KACDG,EAASf,EAAOgB,QAAQJ,QACxBA,EAAUG,EAAOE,QAGrB,IAAMS,GAAOd,EAAQe,SAEjBD,KACIX,EACAA,EAAOa,UAAUF,IAEjBd,EAAQiB,YAAYH,GACpB1B,EAAOsB,GAAGC,mBAAmBvB,EAAQA,EAAOsB,GAAGE,iBAAiBZ,IAChEb,EAAsBC,EAAQ,iBAAkBY,MAchEf,UAASC,QAAQgC,IAAI,iBACjBC,UAAW,WAEXC,KAAM,SAAUhC,GACZA,EAAOiC,WAAW,WAAYxB,GAC9BT,EAAOiC,WAAW,aAAcR,QAGzCS,WFuFkB","file":"ezPluginMoveElement.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ezPluginMoveElement\"] = factory();\n\telse\n\t\troot[\"eZ\"] = root[\"eZ\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"] = root[\"eZ\"][\"ezAlloyEditor\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"][\"ezPluginMoveElement\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ezPluginMoveElement\"] = factory();\n\telse\n\t\troot[\"eZ\"] = root[\"eZ\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"] = root[\"eZ\"][\"ezAlloyEditor\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"][\"ezPluginMoveElement\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 55);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 55:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n(function (global) {\n    if (CKEDITOR.plugins.get('ezmoveelement')) {\n        return;\n    }\n\n    /**\n     * Fires the editorInteraction event.\n     *\n     * @method fireEditorInteraction\n     * @param {Object} editor the CKEditor\n     * @param {Event} evt the event object\n     * @param {Object} target the target\n     */\n    var fireEditorInteraction = function fireEditorInteraction(editor, evt, target) {\n        var event = {\n            editor: editor,\n            target: target.$,\n            name: evt\n        };\n\n        editor.fire('editorInteraction', {\n            nativeEvent: event,\n            selectionData: editor.getSelectionData()\n        });\n    };\n\n    var moveUpCommand = {\n        exec: function exec(editor, data) {\n            var focused = editor.elementPath().block;\n            var widget = void 0;\n\n            if (!focused) {\n                widget = editor.widgets.focused;\n                focused = widget.wrapper;\n            }\n\n            var previous = focused.getPrevious();\n\n            if (previous) {\n                if (widget) {\n                    widget.moveBefore(previous);\n                } else {\n                    focused.insertBefore(previous);\n                    editor.eZ.moveCaretToElement(editor, editor.eZ.findCaretElement(focused));\n                    fireEditorInteraction(editor, 'eZMoveUpDone', focused);\n                }\n            }\n        }\n    };\n\n    var moveDownCommand = {\n        exec: function exec(editor, data) {\n            var focused = editor.elementPath().block;\n            var widget = void 0;\n\n            if (!focused) {\n                widget = editor.widgets.focused;\n                focused = widget.wrapper;\n            }\n\n            var next = focused.getNext();\n\n            if (next) {\n                if (widget) {\n                    widget.moveAfter(next);\n                } else {\n                    focused.insertAfter(next);\n                    editor.eZ.moveCaretToElement(editor, editor.eZ.findCaretElement(focused));\n                    fireEditorInteraction(editor, 'eZMoveDownDone', focused);\n                }\n            }\n        }\n    };\n\n    /**\n     * CKEditor plugin providing the eZMoveUp and eZMoveDown commands. These\n     * commands allow to move the element having the focus in the editor.\n     *\n     * @class ezmoveelement\n     * @namespace CKEDITOR.plugins\n     * @constructor\n     */\n    CKEDITOR.plugins.add('ezmoveelement', {\n        requires: ['ezcaret'],\n\n        init: function init(editor) {\n            editor.addCommand('eZMoveUp', moveUpCommand);\n            editor.addCommand('eZMoveDown', moveDownCommand);\n        }\n    });\n})(window);\n\n/***/ })\n\n/******/ })[\"default\"];\n});\n\n\n// WEBPACK FOOTER //\n// ezPluginMoveElement.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 55);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d5736e542ecb6a9a644","(function (global) {\n    if (CKEDITOR.plugins.get('ezmoveelement')) {\n        return;\n    }\n\n    /**\n     * Fires the editorInteraction event.\n     *\n     * @method fireEditorInteraction\n     * @param {Object} editor the CKEditor\n     * @param {Event} evt the event object\n     * @param {Object} target the target\n     */\n    const fireEditorInteraction = (editor, evt, target) => {\n        const event = {\n            editor: editor,\n            target: target.$,\n            name: evt,\n        };\n\n        editor.fire('editorInteraction', {\n            nativeEvent: event,\n            selectionData: editor.getSelectionData(),\n        });\n    };\n\n    const moveUpCommand = {\n        exec: function (editor, data) {\n            let focused = editor.elementPath().block;\n            let widget;\n\n            if (!focused) {\n                widget = editor.widgets.focused;\n                focused = widget.wrapper;\n            }\n\n            const previous = focused.getPrevious();\n\n            if (previous) {\n                if (widget) {\n                    widget.moveBefore(previous);\n                } else {\n                    focused.insertBefore(previous);\n                    editor.eZ.moveCaretToElement(editor, editor.eZ.findCaretElement(focused));\n                    fireEditorInteraction(editor, 'eZMoveUpDone', focused);\n                }\n            }\n        },\n    };\n\n    const moveDownCommand = {\n        exec: function (editor, data) {\n            let focused = editor.elementPath().block;\n            let widget;\n\n            if (!focused) {\n                widget = editor.widgets.focused;\n                focused = widget.wrapper;\n            }\n\n            const next = focused.getNext();\n\n            if (next) {\n                if (widget) {\n                    widget.moveAfter(next);\n                } else {\n                    focused.insertAfter(next);\n                    editor.eZ.moveCaretToElement(editor, editor.eZ.findCaretElement(focused));\n                    fireEditorInteraction(editor, 'eZMoveDownDone', focused);\n                }\n            }\n        },\n    };\n\n    /**\n     * CKEditor plugin providing the eZMoveUp and eZMoveDown commands. These\n     * commands allow to move the element having the focus in the editor.\n     *\n     * @class ezmoveelement\n     * @namespace CKEDITOR.plugins\n     * @constructor\n     */\n    CKEDITOR.plugins.add('ezmoveelement', {\n        requires: ['ezcaret'],\n\n        init: function (editor) {\n            editor.addCommand('eZMoveUp', moveUpCommand);\n            editor.addCommand('eZMoveDown', moveDownCommand);\n        },\n    });\n})(window);\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle/Resources/public/js/alloyeditor/src/plugins/ez-move-element.js"],"sourceRoot":""}