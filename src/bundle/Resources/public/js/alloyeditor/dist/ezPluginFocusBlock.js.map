{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ezPluginFocusBlock.js","webpack:///webpack/bootstrap 1d4a0d768e7f528e31ba","webpack:///./src/bundle/Resources/public/js/alloyeditor/src/plugins/ez-focus-block.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","63","global","CKEDITOR","plugins","findFocusedBlock","editor","element","findOne","findNewFocusedBlock","elementPath","block","elements","length","updateFocusedBlock","event","data","path","oldBlock","$","removeClass","addClass","clearFocusedBlock","clearFocusedBlockFromData","doc","document","createDocumentFragment","createElement","appendChild","innerHTML","dataValue","list","querySelectorAll","classList","remove","getAttribute","removeAttribute","add","init","on","window"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,mBAAAD,KAEAD,EAAA,GAAAA,EAAA,OAA+BA,EAAA,iBAAAA,EAAA,qBAAiEA,EAAA,oCAAAC,MAC/F,mBAAAK,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,MDgBMC,GACA,SAAU/B,EAAQD,EAASO,GAEjC,cEhFA,SAAU0B,GAGN,IAAIC,SAASC,QAAQZ,IAAI,gBAAzB,CAUA,GAAMa,GAAmB,SAACC,GAAD,MAAYA,GAAOC,QAAQC,QAAQ,sBAQtDC,EAAsB,SAACC,GACzB,GAAMC,GAAQD,EAAYC,MACpBC,EAAWF,EAAYE,QAE7B,OAAKD,GAIEC,EAASA,EAASC,OAAS,GAHvB,MAYTC,EAAqB,SAACC,GACxB,GAAMJ,GAAQF,EAAoBM,EAAMC,KAAKC,MACvCC,EAAWb,EAAiBU,EAAMT,SAEpCY,GAAcP,GAASA,EAAMQ,IAAMD,EAASC,GAC5CD,EAASE,YA1CK,oBA6CdT,GACAA,EAAMU,SA9CQ,qBAwDhBC,EAAoB,SAACP,GACvB,GAAMG,GAAWb,EAAiBU,EAAMT,OAEpCY,IACAA,EAASE,YA5DK,qBAsEhBG,EAA4B,SAACR,GAC/B,GAAMS,GAAMC,SAASC,yBACf3D,EAAO0D,SAASE,cAAc,OAChChD,QAEJ6C,GAAII,YAAY7D,GAChBA,EAAK8D,UAAYd,EAAMC,KAAKc,SAC5B,IAAMC,GAAOhE,EAAKiE,iBAAiB,oBAEnC,IAAID,EAAKlB,OAAQ,CACb,IAAKlC,EAAI,EAAGA,GAAKoD,EAAKlB,SAAUlC,EAAG,CAC/B,GAAM4B,GAAUwB,EAAKpD,EAErB4B,GAAQ0B,UAAUC,OAnFR,oBAqFL3B,EAAQ4B,aAAa,UACtB5B,EAAQ6B,gBAAgB,SAGhCrB,EAAMC,KAAKc,UAAY/D,EAAK8D,WAYpC1B,UAASC,QAAQiC,IAAI,gBACjBC,KAAM,SAAShC,GACXA,EAAOiC,GAAG,kBAAmBzB,GAC7BR,EAAOiC,GAAG,OAAQjB,GAClBhB,EAAOiC,GAAG,UAAWhB,QAG9BiB,WFyFkB","file":"ezPluginFocusBlock.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ezPluginFocusBlock\"] = factory();\n\telse\n\t\troot[\"eZ\"] = root[\"eZ\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"] = root[\"eZ\"][\"ezAlloyEditor\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"][\"ezPluginFocusBlock\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ezPluginFocusBlock\"] = factory();\n\telse\n\t\troot[\"eZ\"] = root[\"eZ\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"] = root[\"eZ\"][\"ezAlloyEditor\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"][\"ezPluginFocusBlock\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 63);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 63:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n(function (global) {\n    var FOCUSED_CLASS = 'is-block-focused';\n\n    if (CKEDITOR.plugins.get('ezfocusblock')) {\n        return;\n    }\n\n    /**\n     * Finds the focused blocks.\n     *\n     * @method findFocusedBlock\n     * @param {Object} editor the CKEditor\n     */\n    var findFocusedBlock = function findFocusedBlock(editor) {\n        return editor.element.findOne('.' + FOCUSED_CLASS);\n    };\n\n    /**\n     * Finds blocks to focus.\n     *\n     * @method findNewFocusedBlock\n     * @param {Object} elementPath the element path\n     */\n    var findNewFocusedBlock = function findNewFocusedBlock(elementPath) {\n        var block = elementPath.block;\n        var elements = elementPath.elements;\n\n        if (!block) {\n            return null;\n        }\n\n        return elements[elements.length - 2];\n    };\n\n    /**\n     * Updates the focused blocks.\n     *\n     * @method updateFocusedBlock\n     * @param {Event} event the event object\n     */\n    var updateFocusedBlock = function updateFocusedBlock(event) {\n        var block = findNewFocusedBlock(event.data.path);\n        var oldBlock = findFocusedBlock(event.editor);\n\n        if (oldBlock && (!block || block.$ !== oldBlock.$)) {\n            oldBlock.removeClass(FOCUSED_CLASS);\n        }\n\n        if (block) {\n            block.addClass(FOCUSED_CLASS);\n        }\n    };\n\n    /**\n     * Clear the focus from block.\n     *\n     * @method clearFocusedBlock\n     * @param {Event} event the event object\n     */\n    var clearFocusedBlock = function clearFocusedBlock(event) {\n        var oldBlock = findFocusedBlock(event.editor);\n\n        if (oldBlock) {\n            oldBlock.removeClass(FOCUSED_CLASS);\n        }\n    };\n\n    /**\n     * Clear the focus blocks from data.\n     *\n     * @method clearFocusedBlockFromData\n     * @param {Event} event the event object\n     */\n    var clearFocusedBlockFromData = function clearFocusedBlockFromData(event) {\n        var doc = document.createDocumentFragment();\n        var root = document.createElement('div');\n        var i = void 0;\n\n        doc.appendChild(root);\n        root.innerHTML = event.data.dataValue;\n        var list = root.querySelectorAll('.' + FOCUSED_CLASS);\n\n        if (list.length) {\n            for (i = 0; i != list.length; ++i) {\n                var element = list[i];\n\n                element.classList.remove(FOCUSED_CLASS);\n\n                if (!element.getAttribute('class')) {\n                    element.removeAttribute('class');\n                }\n            }\n            event.data.dataValue = root.innerHTML;\n        }\n    };\n\n    /**\n     * CKEditor plugin to add/remove the focused class on the block holding the\n     * caret.\n     *\n     * @class ezfocusblock\n     * @namespace CKEDITOR.plugins\n     * @constructor\n     */\n    CKEDITOR.plugins.add('ezfocusblock', {\n        init: function init(editor) {\n            editor.on('selectionChange', updateFocusedBlock);\n            editor.on('blur', clearFocusedBlock);\n            editor.on('getData', clearFocusedBlockFromData);\n        }\n    });\n})(window);\n\n/***/ })\n\n/******/ })[\"default\"];\n});\n\n\n// WEBPACK FOOTER //\n// ezPluginFocusBlock.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 63);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1d4a0d768e7f528e31ba","(function(global) {\n    const FOCUSED_CLASS = 'is-block-focused';\n\n    if (CKEDITOR.plugins.get('ezfocusblock')) {\n        return;\n    }\n\n    /**\n     * Finds the focused blocks.\n     *\n     * @method findFocusedBlock\n     * @param {Object} editor the CKEditor\n     */\n    const findFocusedBlock = (editor) => editor.element.findOne('.' + FOCUSED_CLASS);\n\n    /**\n     * Finds blocks to focus.\n     *\n     * @method findNewFocusedBlock\n     * @param {Object} elementPath the element path\n     */\n    const findNewFocusedBlock = (elementPath) => {\n        const block = elementPath.block;\n        const elements = elementPath.elements;\n\n        if (!block) {\n            return null;\n        }\n\n        return elements[elements.length - 2];\n    };\n\n    /**\n     * Updates the focused blocks.\n     *\n     * @method updateFocusedBlock\n     * @param {Event} event the event object\n     */\n    const updateFocusedBlock = (event) => {\n        const block = findNewFocusedBlock(event.data.path);\n        const oldBlock = findFocusedBlock(event.editor);\n\n        if (oldBlock && (!block || block.$ !== oldBlock.$)) {\n            oldBlock.removeClass(FOCUSED_CLASS);\n        }\n\n        if (block) {\n            block.addClass(FOCUSED_CLASS);\n        }\n    };\n\n    /**\n     * Clear the focus from block.\n     *\n     * @method clearFocusedBlock\n     * @param {Event} event the event object\n     */\n    const clearFocusedBlock = (event) => {\n        const oldBlock = findFocusedBlock(event.editor);\n\n        if (oldBlock) {\n            oldBlock.removeClass(FOCUSED_CLASS);\n        }\n    };\n\n    /**\n     * Clear the focus blocks from data.\n     *\n     * @method clearFocusedBlockFromData\n     * @param {Event} event the event object\n     */\n    const clearFocusedBlockFromData = (event) => {\n        const doc = document.createDocumentFragment();\n        const root = document.createElement('div');\n        let i;\n\n        doc.appendChild(root);\n        root.innerHTML = event.data.dataValue;\n        const list = root.querySelectorAll('.' + FOCUSED_CLASS);\n\n        if (list.length) {\n            for (i = 0; i != list.length; ++i) {\n                const element = list[i];\n\n                element.classList.remove(FOCUSED_CLASS);\n\n                if (!element.getAttribute('class')) {\n                    element.removeAttribute('class');\n                }\n            }\n            event.data.dataValue = root.innerHTML;\n        }\n    };\n\n    /**\n     * CKEditor plugin to add/remove the focused class on the block holding the\n     * caret.\n     *\n     * @class ezfocusblock\n     * @namespace CKEDITOR.plugins\n     * @constructor\n     */\n    CKEDITOR.plugins.add('ezfocusblock', {\n        init: function(editor) {\n            editor.on('selectionChange', updateFocusedBlock);\n            editor.on('blur', clearFocusedBlock);\n            editor.on('getData', clearFocusedBlockFromData);\n        },\n    });\n})(window);\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle/Resources/public/js/alloyeditor/src/plugins/ez-focus-block.js"],"sourceRoot":""}