{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ezPluginCountChars.js","webpack:///webpack/bootstrap b9604b9b150e40582d28","webpack:///./src/bundle/Resources/public/js/alloyeditor/src/plugins/ez-count-chars.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","65","global","ZERO_WIDTH_CHARS_REGEX","WHITE_CHARACTERS_REGEX","ALLOWED_TAGS","CKEDITOR","plugins","cleanZeroWidthCharacters","text","replace","fetchCountableTags","html","DOMParser","parseFromString","querySelectorAll","SELECTOR_INPUT","join","sanitize","trim","displayCharactersCount","event","editor","element","$","counterWrapper","parentElement","getElementsByClassName","length","charactersCount","editorHtml","outerHTML","forEach","tag","innerText","add","init","on","window"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,mBAAAD,KAEAD,EAAA,GAAAA,EAAA,OAA+BA,EAAA,iBAAAA,EAAA,qBAAiEA,EAAA,oCAAAC,MAC/F,mBAAAK,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,MDgBMC,GACA,SAAU/B,EAAQD,EAASO,GAEjC,cEhFA,SAAW0B,GAEP,GAAMC,GAAyB,yBACzBC,EAAyB,WAGzBC,GAAgB,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAO,KAAM,KAAM,KAE5E,KAAIC,SAASC,QAAQf,IAAI,gBAAzB,CAWA,GAAMgB,GAA2B,SAACC,GAC9B,MAAOA,GAAKC,QAAQP,EAAwB,KAY1CQ,EAAqB,SAACC,GACxB,OAAO,GAAIC,YACNC,gBAAgBF,EAAM,aACtBG,iBAAiBC,6BAAuBX,EAAaY,KAAK,OAU7DC,EAAW,SAACT,GACd,MAAOA,GAAKC,QAAQN,EAAwB,IAAIe,QAS9CC,EAAyB,SAACC,GAC5B,GAAIC,GAASD,EAAMC,OAAOC,QAAQC,EAC9BC,EAAiBH,EAAOI,cAAcC,uBApDpB,wBAsDtB,IAAIF,EAAeG,OAAQ,CACvB,GAAIC,GAAkB,EAClBC,EAAatB,EAAyBc,EAAOS,UAC7BpB,GAAmBmB,GAEzBE,QAAQ,SAACC,GACnBJ,GAAmBX,EAASe,EAAIC,WAAWN,SAG/CH,EAAe,GAAGS,UAAYL,GAWtCvB,UAASC,QAAQ4B,IAAI,gBACjBC,KAAM,SAAUd,GACZA,EAAOe,GAAG,SAAUjB,QAG7BkB,WFqFkB","file":"ezPluginCountChars.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ezPluginCountChars\"] = factory();\n\telse\n\t\troot[\"eZ\"] = root[\"eZ\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"] = root[\"eZ\"][\"ezAlloyEditor\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"][\"ezPluginCountChars\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ezPluginCountChars\"] = factory();\n\telse\n\t\troot[\"eZ\"] = root[\"eZ\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"] = root[\"eZ\"][\"ezAlloyEditor\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"][\"ezPluginCountChars\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 65);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 65:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n(function (global) {\n\n    var ZERO_WIDTH_CHARS_REGEX = /[\\u200B-\\u200D\\uFEFF]/g;\n    var WHITE_CHARACTERS_REGEX = /\\s\\r?\\n/g;\n    var SELECTOR_INPUT = '.ez-data-source__richtext';\n    var COUNTER_CLASSNAME = 'ez-characters-counter';\n    var ALLOWED_TAGS = ['p', 'li', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'th', 'td'];\n\n    if (CKEDITOR.plugins.get('ezcountchars')) {\n        return;\n    }\n\n    /**\n     * Removes zero-width characters (like zero-width space) globally.\n     *\n     * @method cleanZeroWidthCharacters\n     * @param {string} text to clean\n     * @return {string} text after removing unwanted entities\n     */\n    var cleanZeroWidthCharacters = function cleanZeroWidthCharacters(text) {\n        return text.replace(ZERO_WIDTH_CHARS_REGEX, '');\n    };\n\n    /**\n     * Fetches HTML tags which contain characters to count.\n     * Selector applies only to direct children to prevent nested paragraphs\n     * inside custom tags, embeds or images from being taken into account.\n     *\n     * @method fetchCountableTags\n     * @param {string} contains current html in the editor\n     * @return {Object}\n     */\n    var fetchCountableTags = function fetchCountableTags(html) {\n        return new DOMParser().parseFromString(html, 'text/html').querySelectorAll(SELECTOR_INPUT + '>' + ALLOWED_TAGS.join(','));\n    };\n\n    /**\n     * Removes unwanted whitespaces and newlines from the provided tag text.\n     *\n     * @method sanitize\n     * @param {string} text to sanitize\n     * @return {string} text after removing unwanted entities\n     */\n    var sanitize = function sanitize(text) {\n        return text.replace(WHITE_CHARACTERS_REGEX, '').trim();\n    };\n\n    /**\n     * Displays current count of typed characters.\n     *\n     * @method displayCharactersCount\n     * @param {Event} the event object\n     */\n    var displayCharactersCount = function displayCharactersCount(event) {\n        var editor = event.editor.element.$;\n        var counterWrapper = editor.parentElement.getElementsByClassName(COUNTER_CLASSNAME);\n\n        if (counterWrapper.length) {\n            var charactersCount = 0;\n            var editorHtml = cleanZeroWidthCharacters(editor.outerHTML);\n            var countableTags = fetchCountableTags(editorHtml);\n\n            countableTags.forEach(function (tag) {\n                charactersCount += sanitize(tag.innerText).length;\n            });\n\n            counterWrapper[0].innerText = charactersCount;\n        }\n    };\n\n    /**\n     * CKEditor plugin to count typed characters.\n     *\n     * @class ezcountchars\n     * @namespace CKEDITOR.plugins\n     * @constructor\n     */\n    CKEDITOR.plugins.add('ezcountchars', {\n        init: function init(editor) {\n            editor.on('change', displayCharactersCount);\n        }\n    });\n})(window);\n\n/***/ })\n\n/******/ })[\"default\"];\n});\n\n\n// WEBPACK FOOTER //\n// ezPluginCountChars.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 65);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b9604b9b150e40582d28","(function (global) {\n\n    const ZERO_WIDTH_CHARS_REGEX = /[\\u200B-\\u200D\\uFEFF]/g;\n    const WHITE_CHARACTERS_REGEX = /\\s\\r?\\n/g;\n    const SELECTOR_INPUT = '.ez-data-source__richtext';\n    const COUNTER_CLASSNAME = 'ez-characters-counter';\n    const ALLOWED_TAGS = ['p', 'li', 'h1', 'h2', 'h3', 'h4', 'h5' , 'h6', 'th', 'td'];\n\n    if (CKEDITOR.plugins.get('ezcountchars')) {\n        return;\n    }\n\n    /**\n     * Removes zero-width characters (like zero-width space) globally.\n     *\n     * @method cleanZeroWidthCharacters\n     * @param {string} text to clean\n     * @return {string} text after removing unwanted entities\n     */\n    const cleanZeroWidthCharacters = (text) => {\n        return text.replace(ZERO_WIDTH_CHARS_REGEX, '');\n    };\n\n    /**\n     * Fetches HTML tags which contain characters to count.\n     * Selector applies only to direct children to prevent nested paragraphs\n     * inside custom tags, embeds or images from being taken into account.\n     *\n     * @method fetchCountableTags\n     * @param {string} contains current html in the editor\n     * @return {Object}\n     */\n    const fetchCountableTags = (html) => {\n        return new DOMParser()\n            .parseFromString(html, 'text/html')\n            .querySelectorAll(SELECTOR_INPUT + '>' + ALLOWED_TAGS.join(','));\n    };\n\n    /**\n     * Removes unwanted whitespaces and newlines from the provided tag text.\n     *\n     * @method sanitize\n     * @param {string} text to sanitize\n     * @return {string} text after removing unwanted entities\n     */\n    const sanitize = (text) => {\n        return text.replace(WHITE_CHARACTERS_REGEX, '').trim();\n    };\n\n    /**\n     * Displays current count of typed characters.\n     *\n     * @method displayCharactersCount\n     * @param {Event} the event object\n     */\n    const displayCharactersCount = (event) => {\n        let editor = event.editor.element.$;\n        let counterWrapper = editor.parentElement.getElementsByClassName(COUNTER_CLASSNAME);\n\n        if (counterWrapper.length) {\n            let charactersCount = 0;\n            let editorHtml = cleanZeroWidthCharacters(editor.outerHTML);\n            let countableTags = fetchCountableTags(editorHtml);\n\n            countableTags.forEach((tag) => {\n                charactersCount += sanitize(tag.innerText).length;\n            });\n\n            counterWrapper[0].innerText = charactersCount;\n        }\n    };\n\n    /**\n     * CKEditor plugin to count typed characters.\n     *\n     * @class ezcountchars\n     * @namespace CKEDITOR.plugins\n     * @constructor\n     */\n    CKEDITOR.plugins.add('ezcountchars', {\n        init: function (editor) {\n            editor.on('change', displayCharactersCount);\n        }\n    });\n})(window);\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle/Resources/public/js/alloyeditor/src/plugins/ez-count-chars.js"],"sourceRoot":""}