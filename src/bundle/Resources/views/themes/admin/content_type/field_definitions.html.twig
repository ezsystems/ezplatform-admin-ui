{% set basciFieldDefinitionParams = {
    'is_expand': false,
    'is_draggable': true,
    'container_class': 'ibexa-collapse--field-definition',
    'extra_actions': [
        { 'icon_name': 'trash', 'button_class': 'ibexa-collapse__extra-action-button--remove-field-definitions'}
    ]
} %}

<div class="ibexa-content-type-edit__field-definitions-group">
    <div class="ibexa-content-type-edit__add-field-definitions-group">
        <button type="button" class="ibexa-content-type-edit__add-field-definitions-group-button btn ibexa-btn ibexa-btn ibexa-btn--info">
            <svg class="ibexa-icon ibexa-icon--small">
                <use xlink:href="{{ ibexa_icon_path('create') }}"></use>
            </svg>
            {{ 'content_type.view.edit.add'|trans|desc('Add') }}
        </button>

        {{ include('@ezdesign/ui/component/popup_menu/popup_menu.html.twig', {
            'items': grouped_field_defintions|keys|map(group => {
                'label': group,
                'action_class': grouped_field_defintions[group] is not empty ? 'ibexa-popup-menu__item-action--disabled ' : '',
                'action_data_attribute': {
                    'data-related-collapse-selector': '.ibexa-field-definitions-group-' ~ group
            }})
        }) }}
    </div>
    <div class="ibexa-content-type-edit__field-definitions-group-list">
        {% for id, field_defintions in grouped_field_defintions %}
            {% set container_class = 'ibexa-collapse--field-definitions-group ibexa-field-definitions-group-' ~ id %}

            {% if field_defintions is empty %}
                {% set container_class = container_class ~ ' ibexa-collapse--hidden' %}
            {% endif %}

            {% set collapseParams = {
                container_class,
                'body_id': id ~ '_collapse',
                'header_label': id,
                'is_expand': true,
                'extra_actions': [
                    { 'icon_name': 'trash', 'button_class':  'ibexa-collapse__extra-action-button--remove-field-definitions-group'}
                ],
                'data_attribute': {
                    'data-fields-group-id':  id
                }
            }%}

            {%- embed "@ezdesign/ui/component/collapse.html.twig" with collapseParams -%}
                {%- block body_content -%}
                    <div
                        class="ibexa-content-type-edit__field-definitions"
                        data-placeholder="{{ include('@ezdesign/content_type/field_definition_placeholder.html.twig') }}"
                    >
                        <div class="ibexa-content-type-edit__empty-group-placeholder {% if field_defintions|length != 0 %}ibexa-content-type-edit__empty-group-placeholder--hidden{% endif %}">
                            <img
                                class="ibexa-content-type-edit__empty-group-image"
                                src="{{ asset('bundles/ezplatformadminui/img/empty-field-definition-group.svg') }}"
                                alt="{{ 'content_type.view.edit.empty_group_content'|trans|desc('Empty group, please drag some field') }}"
                            >
                            <label>{{ 'content_type.view.edit.empty_group_content'|trans|desc('Empty group, please drag some field') }}</label>
                            <h2>{{ 'content_type.view.edit.empty_group_content'|trans|desc('Empty group, please drag some field') }}</h2>
                        </div>

                        {% for field_definition in field_defintions %}
                            {% set value = field_definition.vars.value %}
                            {% set name = value.names[language_code] ?? value.names[content_type.mainLanguageCode]  %}
                            {% set collapseParams = basciFieldDefinitionParams|merge({ 
                                'body_id': field_definition.vars.id ~ '_collapse',
                                'header_label': name,
                                'data_attribute': {
                                    'data-field-definition-identifier': field_definition.vars.value.identifier,
                                }
                            }) %}

                            {%- embed "@ezdesign/ui/component/collapse.html.twig" with collapseParams -%}
                                {% block body_content %}
                                    <div class="ibexa-content-type-edit__field-definition-content">
                                        {{ form_row(field_definition.name) }}
                                        {{ form_row(field_definition.identifier) }}
                                        {{ form_row(field_definition.description) }}
                                        {{ form_row(field_definition.isRequired) }}
                                        {{ form_row(field_definition.isSearchable) }}
                                        {{ form_row(field_definition.isTranslatable) }}
                                        {{ form_row(field_definition.isThumbnail) }}
                                        {{ form_row(field_definition.fieldGroup, { attr: {
                                            class: "ibexa-input ibexa-input--field-group"
                                        }}) }}
                                        {{ form_widget(field_definition.position, { attr: {
                                            hidden: 'hidden',
                                            class: "ibexa-input ibexa-input--position"
                                        }}) }}

                                        {# Field type specific fields below #}
                                        {{ ez_render_field_definition_edit(value, {
                                            'languageCode': language_code,
                                            'form': field_definition,
                                            'group_class': value.group_class|default(''),
                                            'is_translation': is_translation,
                                        }) }}

                                        {# Default rendering #}
                                        {% for child in field_definition|filter(child => child.isRendered() == false) %}
                                            {{ form_row(child) }}
                                        {% endfor %}
                                    </div>
                                {%- endblock -%}
                            {%- endembed -%}
                        {% endfor %}
                    </div>
                {% endblock %}
            {%- endembed -%}
        {% endfor %}
    </div>
</div>
